name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ['main']

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Set the GITHUB_TOKEN permissions
permissions:
  contents: write  # Required for semantic-release to push tags
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: 'pages'
  cancel-in-progress: true

jobs:
  prepare-version:
    name: Prepare version
    runs-on: ubuntu-latest
    outputs:
      new-version: ${{ steps.semantic-release.outputs.new-version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Release (update versions and changelog)
        id: semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          npx semantic-release
          # Get the new version from package.json
          echo "new-version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

      - name: Upload version info
        uses: actions/upload-artifact@v4
        with:
          name: version-info
          path: |
            package.json
            CHANGELOG.md

  build:
    name: Build
    needs: prepare-version
    runs-on: ubuntu-latest
    outputs:
      artifact-name: build-artifact-${{ github.run_id }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Download version info
        uses: actions/download-artifact@v4
        with:
          name: version-info
          path: ./

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-artifact-${{ github.run_id }}
          path: dist/
          retention-days: 1

  deploy:
    name: Deploy
    needs: build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
    - name: Download build artifact
      uses: actions/download-artifact@v4
      with:
        name: ${{ needs.build.outputs.artifact-name }}
        path: ./dist

    - name: Setup Pages
      uses: actions/configure-pages@v5

    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: './dist'

    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
