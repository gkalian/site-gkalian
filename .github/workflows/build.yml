name: Build And Publish Frontend Image

on:
  push:
    branches:
      - main

permissions:
  contents: read
  packages: write

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=sha,prefix={{branch}}-
            type=raw,value=latest

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Bump version
        id: bump-version
        run: |
          # Get current version
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          
          # Bump patch version (1.0.0 -> 1.0.1)
          IFS='.' read -r -a version_parts <<< "$CURRENT_VERSION"
          NEW_VERSION="${version_parts[0]}.${version_parts[1]}.$((version_parts[2] + 1))"
          
          # Update package.json
          npm version $NEW_VERSION --no-git-tag-version --allow-same-version
          
          echo "version=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "Bumped version from $CURRENT_VERSION to $NEW_VERSION"

      - name: Upload version info
        uses: actions/upload-artifact@v4
        with:
          name: version-info
          path: |
            package.json
            CHANGELOG.md
            helm/Chart.yaml